@page "/login"
@using BlazorCookieAuth.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="d-flex justify-content-center">
            <div class="col-xl-6">
                <RadzenCard>
                    <RadzenLogin AllowRegister="false" AllowResetPassword="false" Login=@(args => PerformLogin(args, "")) Style="margin-bottom: 20px;" />
                    <div style="color:red">@errorMessage</div>
                </RadzenCard>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <p>Allready logged in.</p>
    </Authorized>
</AuthorizeView>

@code
{
    private string errorMessage;

    public void PerformLogin(LoginArgs args, string name)
    {
        errorMessage = "";
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(args.Username, args.Password);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
}