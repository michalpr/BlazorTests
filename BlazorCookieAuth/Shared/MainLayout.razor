@inherits LayoutComponentBase
@using BlazorCookieAuth.Authentication
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="main">
    <div class="top-row px-4">
        <AuthorizeView>
            <Authorized>
                <a href="" @onclick="PerformLogout">Logout user @context.User.Identity.Name</a>
            </Authorized>
            <NotAuthorized>
            </NotAuthorized>
        </AuthorizeView>
    </div>

    <div class="content px-4">
        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code
{
    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"/login");
        }
    }

    public void PerformLogout()
    {
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/login");
        }
        catch { }
    }
}
